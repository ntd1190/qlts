@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsTwo.cshtml";

    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    //meta
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);
    //page class
    Html.AppendPageCssClassParts("html-category-page");

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@*category breadcrumb*@
<ul class="filter">
    <div class="row">
        <li>
            <span itemscope>
                <a href="@Url.RouteUrl("HomePage")" title="@T("Forum.Breadcrumb.HomeTitle")">@T("Forum.Home")</a>
            </span>
            <span class="delimiter">@breadcrumbDelimiter</span>

        </li>
        @foreach (var item in Model.CategoryBreadcrumb)
        {
            if (Model.CategoryBreadcrumb.Count() > 1)
            {
                if (item == Model.CategoryBreadcrumb.First())
                {
                    <li>
                        <span itemscope">
                            <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" itemprop="url">
                                <span itemprop="title">@item.Name</span>
                            </a>
                        </span>
                        <span class="delimiter">@breadcrumbDelimiter</span>
                    </li>
                  
                }
                else
                {
                    <li>
                        <h1>
                            @item.Name
                        </h1>
                    </li>
                }
            }
            else
            {
                <li>
                    <h1>
                        @item.Name
                    </h1>
                </li>
            }

        }
        @if (Model.Products.Count > 0)
        {
            @Html.Partial("_CatalogSelectors", Model.PagingFilteringContext, new ViewDataDictionary())
        }
    </div>
 
</ul>
<div>

    <input type="hidden" id="hdCategoryId" value="152535" />
    <!--End Title product-->
    <!--Take 2 first-->
    <div id="main-content" style="margin-top:10px;">

        <section class="products">
            <div class="container">
                <div class="shop clearfix shop-masonry" id="cateProductContent">
                    <div class="masonry-sizer"></div>
                    @foreach (var item in Model.Products)
                    {
                        <div class="masonry-item">
                            @Html.Partial("_ProductList", item)
                        </div>

                    }
                </div>
            </div>
        </section>

        @*@if (Model.Products.Count > 0)
            {
                <div class="@(Model.PagingFilteringContext.ViewMode == "list" ? "product-list" : "product-grid")">
                    <div class="item-grid">
                        @foreach (var product in Model.Products)
                        {
                            <div class="item-box">
                                @Html.Partial("_ProductBox", product)
                            </div>
                        }
                    </div>
                </div>
            }*@
        @{
            var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
        }
        @if (!pager.IsEmpty())
        {
            <div class="pager">
                @pager
            </div>
        }
    </div>
</div>
<style>
    .filter {
        display: block;
        height: auto;
        background: #f5f5f5;
        border-right: 1px solid #f5f5f5;
        width: 100%;
    }

        .filter li {
            display: inline-block;
            height: 40px;
            width: auto;
            vertical-align: top;
            font-size: 12px;
            position: relative;
            white-space: nowrap;
            line-height: 40px;
        }

            .filter li a {
                color: #288ad6;
                font-size: 12px;
                font-weight: bold;
            }
             .filter li h1 {
                font-size: 12px;
                font-weight: bold;
                line-height:5px;
            }
                .filter li a:hover {
                    color: #e81c24;
                }
</style>
